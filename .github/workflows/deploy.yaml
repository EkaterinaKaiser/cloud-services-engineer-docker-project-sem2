name: Docker Project Deploy

on:
  push:
    branches:
      - main

jobs:
  build_and_push_to_docker_hub:
      name: Push Docker image to DockerHub
      runs-on: ubuntu-latest
      steps:
        - name: Check out the repo
          uses: actions/checkout@v3
        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v2
        - name: Login to Docker 
          uses: docker/login-action@v2
          with:
            username: ${{ secrets.DOCKER_USER }}
            password: ${{ secrets.DOCKER_PASSWORD }}
        - name: Push Backend to DockerHub
          uses: docker/build-push-action@v4
          with:
            context: ./backend/
            push: true
            tags: ${{ secrets.DOCKER_USER }}/docker-project-backend:latest
        - name: Push Frontend to DockerHub
          uses: docker/build-push-action@v4
          with:
            context: ./frontend/
            push: true
            tags: ${{ secrets.DOCKER_USER }}/docker-project-frontend:latest
            build-args: |
              VUE_APP_API_URL=http://89.169.156.255:8080

  run-with-docker-compose:
    name: Push Docker image to DockerHub
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Build via Docker Compose
        uses: hoverkraft-tech/compose-action@v2.2.0

  deploy_to_server:
    name: Deploy to 89.169.156.255
    runs-on: ubuntu-latest
    needs: [build_and_push_to_docker_hub]
    steps:
      - name: Deploy over SSH and run containers
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: 89.169.156.255
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script_stop: true
          script: |
            docker login -u ${{ secrets.DOCKER_USER }} -p ${{ secrets.DOCKER_PASSWORD }}
            docker pull ${{ secrets.DOCKER_USER }}/docker-project-backend:latest
            docker pull ${{ secrets.DOCKER_USER }}/docker-project-frontend:latest
            
            # Останавливаем и удаляем все старые контейнеры
            docker stop momo-store-backend momo-store-frontend momo-store-nginx || true
            docker rm -f momo-store-backend momo-store-frontend momo-store-nginx || true
            
            # Удаляем старую сеть и создаем новую
            docker network rm app-network || true
            docker network create app-network
            
            # Запускаем новые контейнеры
            docker run -d \
              --name momo-store-backend \
              --restart unless-stopped \
              --network app-network \
              -p 8080:8080 \
              -e PORT=8080 \
              ${{ secrets.DOCKER_USER }}/docker-project-backend:latest
            docker build -t ${{ secrets.DOCKER_USER }}/docker-project-frontend:latest \
              --build-arg VUE_APP_API_URL=http://89.169.156.255:8080 \
              ./frontend/
            docker run -d \
              --name momo-store-frontend \
              --restart unless-stopped \
              --network app-network \
              -p 80:80 \
              ${{ secrets.DOCKER_USER }}/docker-project-frontend:latest